/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package G2M3E1.Reto05.RedFlix.vista;

import G2M3E1.Reto05.RedFlix.SpringContext;
import G2M3E1.Reto05.RedFlix.modelos.Contenido;
import G2M3E1.Reto05.RedFlix.modelos.Serie;
import G2M3E1.Reto05.RedFlix.repositorios.ContenidoRepo;
import G2M3E1.Reto05.RedFlix.repositorios.SerieRepo;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Norberto
 */
public class SeriePanel extends javax.swing.JPanel {

    ContenidoRepo cntCont;
    SerieRepo serCont;

    /**
     * Creates new form SeriePanel
     */
    public SeriePanel() {
        initComponents();
        cntCont = SpringContext.getBean(ContenidoRepo.class);
        serCont = SpringContext.getBean(SerieRepo.class);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomJTF = new javax.swing.JTextField();
        creBtn = new javax.swing.JButton();
        serIdLbl = new javax.swing.JLabel();
        busBtn = new javax.swing.JButton();
        nomLbl = new javax.swing.JLabel();
        ediBtn = new javax.swing.JButton();
        epiLbl = new javax.swing.JLabel();
        eliBtn = new javax.swing.JButton();
        tempLbl = new javax.swing.JLabel();
        msgLbl = new javax.swing.JLabel();
        serIdJTF = new javax.swing.JTextField();
        epiJTF = new javax.swing.JTextField();
        tempJTF = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        creBtn.setText("Crear");
        creBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creBtnActionPerformed(evt);
            }
        });

        serIdLbl.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        serIdLbl.setText("Serie ID");

        busBtn.setText("Buscar");
        busBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busBtnActionPerformed(evt);
            }
        });

        nomLbl.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        nomLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nomLbl.setText("Nombre");

        ediBtn.setText("Editar");
        ediBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ediBtnActionPerformed(evt);
            }
        });

        epiLbl.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        epiLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        epiLbl.setText("Episodios");

        eliBtn.setText("Eliminar");
        eliBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliBtnActionPerformed(evt);
            }
        });

        tempLbl.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        tempLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tempLbl.setText("Temporadas");

        msgLbl.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(creBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(busBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ediBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(eliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(msgLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nomLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serIdLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(serIdJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(epiLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(epiJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nomJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tempLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tempJTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epiLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serIdJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epiJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tempJTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(msgLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(busBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(creBtn)
                    .addComponent(eliBtn)
                    .addComponent(ediBtn))
                .addGap(24, 24, 24))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void creBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creBtnActionPerformed
        if (nomJTF.getText().equals("") || epiJTF.getText().equals("")
                || tempJTF.getText().equals("")) {
            msgLbl.setText("Todavía faltan datos por digitar.");
            System.out.println("Todavía faltan datos por digitar.");
        } else {
            crear();
        }
    }//GEN-LAST:event_creBtnActionPerformed

    private void busBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busBtnActionPerformed
        if (serIdJTF.getText().equals("")) {
            findSerByName();
        } else {
            findSerById(Long.parseLong(serIdJTF.getText()));
        }
    }//GEN-LAST:event_busBtnActionPerformed

    private void ediBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ediBtnActionPerformed
        if (serCont.findById(Long.parseLong(serIdJTF.getText())).isPresent()) {
            actualizar();
        } else {
            msgLbl.setText("El Id de la serie selecionada no se encuentra en "
                    + "la base de datos.");
            System.out.println("El Id de la serie selecionado no se encuentra en "
                    + "la base de datos.");
        }
    }//GEN-LAST:event_ediBtnActionPerformed

    private void eliBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliBtnActionPerformed
        if (!serIdJTF.getText().equals("")) {
            eliminar();
        }
    }//GEN-LAST:event_eliBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton busBtn;
    private javax.swing.JButton creBtn;
    private javax.swing.JButton ediBtn;
    private javax.swing.JButton eliBtn;
    private javax.swing.JTextField epiJTF;
    private javax.swing.JLabel epiLbl;
    private javax.swing.JLabel msgLbl;
    private javax.swing.JTextField nomJTF;
    private javax.swing.JLabel nomLbl;
    private javax.swing.JTextField serIdJTF;
    private javax.swing.JLabel serIdLbl;
    private javax.swing.JTextField tempJTF;
    private javax.swing.JLabel tempLbl;
    // End of variables declaration//GEN-END:variables

    public void limpiarCampos() {
        serIdJTF.setText("");
        nomJTF.setText("");
        epiJTF.setText("");
        tempJTF.setText("");
        msgLbl.setText("");
    }

    public Serie formulario() {
        Serie ser = new Serie();
        ser.setSerEpi(Long.parseLong(epiJTF.getText()));
        ser.setSerTemp(Long.parseLong(tempJTF.getText()));
        return ser;
    }

    public void crear() {
        Long contId;
        contId = contenidoId();
        if (cntCont.findById(contId).isPresent()) {
            msgLbl.setText("La serie ya se encuentra en la base de datos.");
            System.out.println("La serie ya se encuentra en la base de datos.");
        } else {
            crearActualizarSer(contId, "Se registró correctamente la serie ",
                    "Ocurrió un error al crear la nueva serie.");
        }
    }

    public Long contenidoId() {
        for (Contenido cont : cntCont.findAll()) {
            if (nomJTF.getText().equals(cont.getContName())) {
                return cont.getContId();
            }
        }
        return nuevoContId();
    }

    public Long nuevoContId() {
        List<Contenido> nuevo = cntCont.findAll();
        Long id = 2000L;
        if (!nuevo.isEmpty()) {
            for (Contenido salida : nuevo) {
                if (salida.getContId() > 1000) {
                    id = salida.getContId();
                }
            }
            return id + 1L;
        } else {
            return 2001L;
        }
    }

    public void crearContenido(Long id) {
        Contenido cont = new Contenido();
        cont.setContName(nomJTF.getText());
        cont.setContId(id);
        cntCont.save(cont);
    }

    public void crearActualizarSer(Long idCont, String texto1, String texto2) {
        Serie ser = formulario();
        crearContenido(idCont);
        ser.setContId(idCont);
        try {
            serCont.save(ser);
            serIdJTF.setText(idCont.toString());
            msgLbl.setText(texto1 + nomJTF.getText());
            System.out.println(texto1 + nomJTF.getText());
        } catch (Exception e) {
            msgLbl.setText(texto2);
            System.out.println(texto2);
        }
        /*Serie ser = formulario();
        crearContenido(idCont);
        ser.setContId(idCont);
        try {
            serCont.save(ser);
            serIdJFTF.setText(idCont.toString());
            msgLbl.setText("Se actualizó correctamente la serie "
                    + nomJTF.getText());
            System.out.println("Se actulizó correctamente la serie "
                    + nomJTF.getText());
        } catch (Exception e) {
            msgLbl.setText("Ocurrió un error al actualizar la serie.");
            System.out.println("Ocurrió un error al actulizar la serie.");
        }*/
    }

    public void findSerByName() {
        if (!nomJTF.getText().equals("")) {
            for (Contenido cont : cntCont.findAll()) {
                if (cont.getContName().equals(nomJTF.getText())) {
                    nomJTF.setText(cont.getContName());
                    serIdJTF.setText(cont.getContId().toString());
                    Serie ser = serCont.findById(cont.getContId()).get();
                    epiJTF.setText(ser.getSerEpi().toString());
                    tempJTF.setText(ser.getSerTemp().toString());
                    msgLbl.setText("Serie disponible: "
                            + cntCont.findById(ser.getContId()).get().getContName()
                            + " consta de " + serCont.findById(ser.getContId()).get().getSerEpi()
                            + " episodios en " + serCont.findById(ser.getContId()).get().getSerTemp()
                            + " temporadas.");
                    System.out.println("Serie disponible: "
                            + cntCont.findById(ser.getContId()).get().getContName()
                            + " consta de " + serCont.findById(ser.getContId()).get().getSerEpi()
                            + " episodios en " + serCont.findById(ser.getContId()).get().getSerTemp()
                            + " temporadas.");
                    return;
                }
            }
            msgLbl.setText("La serie que busca no fue encontrada.");
            System.out.println("La serie que busca no fue encontrada.");
        } else {
            msgLbl.setText("Todavía faltan datos por digitar.");
            System.out.println("Todavía faltan datos por digitar.");
        }
    }

    public void findSerById(Long id) {
        if (cntCont.findById(id).isPresent()) {
            Contenido cont = cntCont.findById(id).get();
            nomJTF.setText(cont.getContName());
            serIdJTF.setText(cont.getContId().toString());
            Serie ser = serCont.findById(cont.getContId()).get();
            epiJTF.setText(ser.getSerEpi().toString());
            tempJTF.setText(ser.getSerTemp().toString());
            msgLbl.setText("Serie disponible: "
                    + cntCont.findById(ser.getContId()).get().getContName()
                    + " consta de " + serCont.findById(ser.getContId()).get().getSerEpi()
                    + " episodios en " + serCont.findById(ser.getContId()).get().getSerTemp()
                    + " temporadas.");
            System.out.println("Serie disponible: "
                    + cntCont.findById(ser.getContId()).get().getContName()
                    + " consta de " + serCont.findById(ser.getContId()).get().getSerEpi()
                    + " episodios en " + serCont.findById(ser.getContId()).get().getSerTemp()
                    + " temporadas.");
        } else {
            msgLbl.setText("La serie que busca no fue encontrada.");
            System.out.println("La serie que busca no fue encontrada.");
        }
    }

    public void actualizar() {
        Long contId;
        contId = Long.parseLong(serIdJTF.getText());
        if (cntCont.findById(contId).isPresent()) {
            crearActualizarSer(contId, "Se actualizó correctamente la serie ",
                    "Ocurrió un error al actualizar la serie.");
        } else {
            msgLbl.setText("El id de la serie no se encuentra en la base de datos.");
            System.out.println("El id de la serie no se encuentra en la base de datos.");
        }
    }

    public void eliminar() {
        int verificar = JOptionPane.showConfirmDialog(this, "¿Esta seguro que"
                + " desea eliminar?", "Eliminación", JOptionPane.YES_NO_OPTION);
        if (verificar == 0) {
            try {
                serCont.deleteById(Long.parseLong(serIdJTF.getText()));
                String nombre = cntCont.findById(Long.parseLong(serIdJTF.getText())).get().getContName();
                cntCont.deleteById(Long.parseLong(serIdJTF.getText()));
                msgLbl.setText("Se eliminó la película " + nombre);
                System.out.println("Se eliminó la película " + nombre);
            } catch (Exception e) {
                msgLbl.setText("No se pudo realizar el proceso de eliminación");
                System.out.println("No se pudo realizar el proceso de eliminación");
            }
        }
    }
}
